exit
current_user
@bulletin.creator
@bulletin.to_moderate!
@bulletin.may_to_moderate?
@creator
current_user
@bulletin.creator
exit
current_user
@bulletin.creator
@bulletin.to_moderate!
@bulletin.may_to_moderate?
exit
@bulletin.to_moderate!
@bulletin.aasm.current_state
@bulletin.to_moderate!
@bulletin.may_to_moderate?
@bulletin.to_moderate!
exit
@bulletin
patch to_moderate_bulletin_url(@bulletin)
exit
patch "http://www.example.com/bulletins/980190962/to_moderate"
@bulletin.reload
@bulletin
patch "http://www.example.com/bulletins/980190962/to_moderate"
patch http://www.example.com/bulletins/980190962/to_moderate
to_moderate_bulletin_url(@bulletin)
to_moderate_bulletin_url
params
patch to_moderate_bulletin_url(@bulletin), params
patch to_moderate_bulletin_url()
@bulletin
patch to_moderate_bulletin_url(@bulletin.id)
@creator
@bulletin.creator
patch to_moderate_bulletin_url, params: { id: @bulletin.id }
patch :to_moderate_bulletin, params: { id: @bulletin.id }
@bulletin
patch to_moderate_bulletin_url(@bulletin)
exit
@bulletin
patch archive_bulletin_path(@bulletin)
patch archive__bulletin_path(@bulletin)
patch to_moderate_bulletin_path(@bulletin)
@bulletin
@bulletin.to_moderate
@bulletin.may_to_moderate?
@bulletin.creator
@creator
@bulletin.may_publish?
@bulletin.state
patch to_moderate_bulletin_path(@bulletin)
@bulletin.state
exit
patch bulletin_url(@bulletin), params: { bulletin: { title: "Updated Title", description: "Updated Description", category_id: categories(:two).id, state: 'draft', image: fixture_file_upload(File.join(Rails.root, "test/fixtures/files/#{@images.sample}"), 'image/jpeg') } }
patch bulletin_url(@bulletin), params: { bulletin: { title: "Updated Title", description: "Updated Description", category_id: categories(:two).id, state: 'draft', image: 'asd' } }
patch bulletin_url(@bulletin)
categories(:two)
@bulletin
params
patch bulletin_url(@bulletin), params: { bulletin: { title: "Updated Title", description: "Updated Description", category_id: categories(:two).id, state: 'draft' } }
exit
patch bulletin_url(@bulletin), params: { bulletin: { title: "Updated Title", description: "Updated Description", category_id: categories(:two).id } }
exit
params
bulletin_params
exit
patch bulletin_url(@bulletin), params: { bulletin: { title: "Updated Title" } }
patch bulletin_url(@bulletin), params: { title: "Updated Title", description: "Updated Description" }
patch bulletin_url(@bulletin), params: { bulletin: { title: "Updated Title", description: "Updated Description" } }
patch bulletin_url(@bulletin), params: { id: @bulletin.id, bulletin: { title: "Updated Title", description: "Updated Description" } }
exit
учше
Bulletin.find_by(title: 'quia', state: 'draft')
Bulletin.find_by(title: 'quia')
Bulletin.find_by(attrs)
attrs
Bulletin.last
bulletin = Bulletin.find_by(attrs)
post bulletins_url, params: { bulletin: attrs }
assert_response :success
assert_response
post bulletins_url, params: { bulletin: attrs }
attrs
exit
post
post :create
post :create, params: { bulletin: attrs }
continue
exit
continue
exit
continue
authorize @bulletins
continue
Category.all
continue
exit
Bulletin.where(state: 'published').includes(:creator).order('created_at DESC')
params[:q]
continue
exit
params[:q]
params
exit
current_user.bulletins.order('created_at DESC')
@search = current_user.bulletins.order('created_at DESC').ransack(params[:q])
current_user.bulletins.order('created_at DESC').ransack(params[:q])
params[:q]
continue
current_user.bulletins.order('created_at DESC').ransack(params[:q], search_key: 'state')
params[:q]
exit
params[:q]
exit
params[:q]
continue
params[:q]
exit
params[:q]
exit
params[:q]
params
current_user.bulletins.order('created_at DESC').ransack(params[:q])
ransack(params[:q])
params[:q]
continue
user
exit
user
continue
auth['uid']
auth['info']['name']
auth['info']['email']
auth
exit
continue
params
